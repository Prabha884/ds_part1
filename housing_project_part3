import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the dataset
data = pd.read_csv("bitcoin_data.csv")

# Extract the input and output features
x = data.iloc[:, 1:].values
y = data.iloc[:, 0].values

# Split the dataset into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# Train a linear regression model
lr = LinearRegression()
lr.fit(x_train, y_train)

# Evaluate the model
train_score = lr.score(x_train, y_train)
test_score = lr.score(x_test, y_test)
print("Training score:", train_score)
print("Testing score:", test_score)

# Make predictions
y_pred = lr.predict(x_test)

# Plot the predicted vs actual prices
plt.plot(y_test, label="Actual")
plt.plot(y_pred, label="Predicted")
plt.legend()
plt.show()

# Calculate the mean squared error
mse = mean_squared_error(y_test, y_pred)
print("Mean squared error:", mse)
